#Unit10 signal handling 信号提了一种异步事件处理方法 <signal.h> <sys/signal.h>

#1
信号产生：
A 终端按键触发	B 硬件异常产生	C 进程kill(2)向另一个进程或进程组发送信号 D kill(1) E 软件实现
信号处理动作：
A 默认处理	B SIGIGN -- 忽略	C 自定义处理函数

#2 函数signal
void (*signal(int signo, void (*func(int))))(int);
func - 函数地址 SIG_IGN SIG_DFL 自己编写函数
函数返回值 -- 函数地址，函数有一个int参数

程序启动 -- 所有信号的状态是系统默认
进程创建 -- 其子进程继承父进程的信号处理方式

#3 不可靠的信号
信号丢失；信号交叉出现处理

#4 中断的系统调用
系统调用分类： 低速系统调用 -- 可能阻塞其进程，使其允许信号中断避免阻塞 和 其他系统调用

#5 可重入函数
在信号处理程序中，函数必须可重入；在信号处理操作期间，会阻塞任何引起不一致的信号发送
不可重入原因：
A 使用静态数据结构	B 动态分配释放内存	C 标准IO函数--使用全局数据结构
使用<setjmp.h>控制执行，信号处理中断执行流，

#6

#7
#8
·#9
#10
#11
#12
#13
